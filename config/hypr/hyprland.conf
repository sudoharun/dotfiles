monitor=eDP-1,1920x1080@60,0x0,1
monitor=,preferred,0x-1080,1
# monitor=,preferred,auto,1,mirror,eDP-1

exec-once = waypaper --restore
exec-once = eww update br=`brillo -G | awk -F'.' '{ print $1 }`
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=hyprland
exec-once = dbus-update-activation-environment --systemd --all
exec-once = eww daemon & eww open-many bar corners corners_alt
exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = hyprpm reload -n
exec-once = hypridle
# exec-once = tail -f /tmp/hypr/$HYPRLAND_INSTANCE_SIGNATURE/hyprland.log &> ~/.config/hypr/$(date '+%F_%H-%M-%S_log.txt')
# exec-once = foot bash -c "sudo /usr/bin/powertop --auto-tune"

# Enviroment 
env = WLR_NO_HARDWARE_CURSORS,1
env = XCURSOR_SIZE,24
env = XCURSOR_THEME,Bibata-Modern-Classic
env = HYPRCURSOR_THEME,HyprBibataModernClassicSVG
env = HYPRCURSOR_SIZE,24
env = DESKTOP_SESSION,hyprland
env = XDG_SESSION_TYPE,wayland
env = GTK2_RC_FILES,$HOME/.gtkrc-2.0
env = QT_QPA_PLATFORMTHEME,qt6ct
env = WINIT_UNIX_BACKEND,wayland
env = HYPRLAND_LOG_WLR,1

input {
    kb_layout = gb
    follow_mouse = 1

    touchpad {
        natural_scroll = no
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    gaps_in = 10
    gaps_out = 20
    border_size = 2
    col.active_border = rgba(12121200)
    col.inactive_border = rgba(f5f5f500)
    layout = dwindle
    no_focus_fallback = true
}

decoration {
    rounding = 4

    blur {
      enabled = false
      size = 8
      passes = 3
      new_optimizations = true
      xray = true
      contrast = 1
      brightness = 1
      noise = 0.0
    }

    drop_shadow = false
    shadow_range = 12
    shadow_render_power = 6
    shadow_offset = 12 12
    col.shadow = rgba(242424ee)

    dim_inactive = true
    dim_strength = 0.5

    inactive_opacity = 0.9
}

animations {
    enabled = yes

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 8, myBezier
    animation = windowsIn, 1, 8, myBezier, slide
    animation = windowsOut, 1, 8, myBezier, slide
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 6, default
    animation = workspaces, 1, 5, default
}

dwindle {
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
}

master {
    new_status = master
}

gestures {
    workspace_swipe = on   
}

misc {
  vfr = 1
  vrr = 0
  disable_hyprland_logo = true
  focus_on_activate = true
  mouse_move_enables_dpms = true
  key_press_enables_dpms = true
  allow_session_lock_restore = true
  disable_splash_rendering = false
}

debug {
  disable_logs = false
}

# Uncomment the following for plugin functionality
# plugin {
#   hyprwinwrap {
#       class = windowbg  
#   }
#   hyprexpo {
#       columns = 3
#       gap_size = 5
#       bg_col = rgb(111111)
#       workspace_method = first 1 # [center/first] [workspace] e.g. first 1 or center m+1

#       enable_gesture = true # laptop touchpad, 4 fingers
#       gesture_distance = 250 # how far is the "max"
#       gesture_positive = true # positive = swipe down. Negative = swipe up.
#   } 
# }



# windowrulev2 = float,float:0,fullscreen:0
windowrulev2 = float,class:(xdg-desktop-portal-gtk)
windowrulev2 = maxsize 1000 700,class:(xdg-desktop-portal-gtk)

windowrulev2 = tile,class:^(ONLYOFFICE)(.*)$
windowrulev2 = tile,initialClass:(ONLYOFFICE Desktop Editors)
windowrulev2 = suppressevent maximize,class:^(.*)$

windowrulev2 = float,title:(XtMapper)
windowrulev2 = noblur,title:(XtMapper)
windowrulev2 = fullscreen,title:(Waydroid)
windowrulev2 = size 100% 100%,title:(XtMapper)
windowrulev2 = move 0 0,title:(XtMapper)
windowrulev2 = nodim,title:(Waydroid)
windowrulev2 = stayfocused,title:(XtMapper)

windowrulev2 = nodim,initialClass:^(steam)$
windowrulev2 = noblur,initialClass:^(steam)$
windowrulev2 = minsize 1 1,initialClass:^(steam)$
windowrulev2 = forcergbx,initialClass:^(steam)$,floating:1
windowrulev2 = stayfocused,initialClass:^(steam)$,floating:1
windowrulev2 = noanim,initialClass:^(steam)$,floating:1
windowrulev2 = move 50% 50%,class:^(steam)$,title:(Special Offers)

windowrulev2 = nodim,initialClass:^(Gimp)(.*)$
windowrulev2 = noblur,initialClass:^(Gimp)(.*)$
windowrulev2 = opaque,initialClass:^(Gimp)(.*)$
windowrulev2 = stayfocused,initialClass:^(Gimp)(.*)$,floating:1
windowrulev2 = minsize 1 1,initialClass:^(Gimp)(.*)$,floating:1
windowrulev2 = noanim,initialClass:^(Gimp)(.*)$,floating:1

windowrulev2 = nodim,xwayland:1,floating:1
windowrulev2 = noanim,xwayland:1,floating:1
windowrulev2 = noblur,xwayland:1,floating:1
windowrulev2 = opaque,xwayland:1,floating:1

windowrulev2 = fullscreen,class:(mcpelauncher-client),title:(Minecraft)
windowrulev2 = fullscreen,class:(darksoulsremastered.exe)
windowrulev2 = fullscreen,class:(fivenightsatfreddys.exe)
windowrulev2 = fullscreen,class:(fivenightsatfreddys2.exe)
windowrulev2 = fullscreen,class:(dgen)

windowrulev2 = float,class:(zenity)
windowrulev2 = float,class:(main.py)
windowrulev2 = float,class:(app_launcher.py)
windowrulev2 = float,class:(waypaper)
windowrulev2 = nodim,fullscreen:1
windowrulev2 = tile,class:(vesktop)
windowrulev2 = tile,class:(deluge)
windowrulev2 = pin,class:(showmethekey)
windowrulev2 = nodim,class:(showmethekey)
windowrulev2 = opaque,class:(showmethekey)

windowrulev2 = nodim,class:^(windowbg)$
windowrulev2 = noblur,class:^(windowbg)$
# windowrulev2 = nodim,class:^(.*)(-bg)$
# windowrulev2 = noblur,class:^(.*)(-bg)$

# Move focus with mainMod + arrow keys
bind = SUPER, left, movefocus, l
bind = SUPER, right, movefocus, r
bind = SUPER, up, movefocus, u
bind = SUPER, down, movefocus, d

# Resize active window
bind = SUPER, I, resizeactive, 0% -10%
bind = SUPER, J, resizeactive, -10% 0%
bind = SUPER, K, resizeactive, 0% 10%
bind = SUPER, L, resizeactive, 10% 0%

# Switch workspaces with mainMod + [0-9]
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = ALT, 1, movetoworkspace, 1
bind = ALT, 2, movetoworkspace, 2
bind = ALT, 3, movetoworkspace, 3
bind = ALT, 4, movetoworkspace, 4
bind = ALT, 5, movetoworkspace, 5
bind = ALT, 6, movetoworkspace, 6
bind = ALT, 7, movetoworkspace, 7
bind = ALT, 8, movetoworkspace, 8
bind = ALT, 9, movetoworkspace, 9
bind = ALT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = SUPER, mouse_down, workspace, e+1
bind = SUPER, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow

# Custom Keybindings for everything
bind = SUPER, Return, exec, foot
bind = SUPER, Q, killactive, 
bind = SUPER, M, exit, 
bind = ALT, F, togglefloating,
bind = SUPER, Escape, fullscreen,
bind = SUPER, R, exec, wofi -i -t foot
# bind = SUPER, R, exec, eww -c ~/eww_apps open eww_apps ; hyprctl dispatch submap applaunch
bind = SUPER, E, exec, wofi-emoji -i -t foot
bind = SUPER, F, exec, floorp
bind = SUPER_SHIFT, F, exec, floorp -private-window

# bind = SUPER, grave, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable

bind = , XF86PowerOff, exec, eww update center-option="powermenu" ; hyprctl dispatch submap powermenu ; eww update reveal-option="powermenu" ; eww update power-reveal=1

bind = SUPER, V, exec, hyprctl dispatch submap virtualbox ; notify-send -a hyprland "virtualbox submap enabled" 

binde = , XF86AudioLowerVolume, exec, pamixer -d 5
binde = , XF86AudioRaiseVolume, exec, pamixer -i 5
bind = , XF86AudioMute, exec, pamixer -t
bind = , XF86AudioMicMute, exec, pamixer --default-source -t
bind = , XF86AudioPlay, exec, playerctl play
bind = , XF86AudioPause, exec, playerctl pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

binde = , XF86MonBrightnessUp, exec, brillo -A 5 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness
binde = , XF86MonBrightnessDown, exec, brillo -U 5 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness
binde = SUPER, XF86MonBrightnessUp, exec, brillo -A 1 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness
binde = SUPER, XF86MonBrightnessDown, exec, brillo -U 1 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness

bind = , Print, exec, eww update center-option="screenshooter" ; hyprctl dispatch submap screenshooter ; eww update reveal-option="screenshooter" ; eww update screenshot-reveal=1

bind = SUPER, Tab, cyclenext,
bind = SUPER, Tab, bringactivetotop,

# Don't know what these Keybindings do lol
bind = SUPER, P, pseudo, # dwindle
bind = SUPER, S, togglesplit, # dwindle

# App launcher submap
submap=applaunch
bind = , escape, exec, eww -c ~/eww_apps close eww_apps
bind = , escape, submap, reset
submap=reset

# Powermenu submap
submap=powermenu
bind = , down, exec, eww update power-option=5 ; eww update power-reveal=5
bind = , up, exec, eww update power-option=1 ; eww update power-reveal=1
bind = , right, exec, declare -i val=`eww get power-option` ; eww update power-option=$(( val < 5 ? val + 1 : val )) ; eww update power-reveal=$(( val < 5 ? val + 1 : val ))
bind = , left, exec, declare -i val=`eww get power-option` ; eww update power-option=$(( val > 1 ? val - 1 : val )) ; eww update power-reveal=$(( val > 1 ? val - 1 : val ))
bind = , Return, exec, eww update power-reveal=0
bind = , Return, exec, $HOME/.config/eww/scripts/powermenu
bind = , Return, exec, eww update center-option="workspaces" ; eww update reveal-option="workspaces"
bind = , Return, submap, reset
bind = , escape, exec, eww update power-option=1 ; eww update power-reveal=0
bind = , escape, exec, eww update center-option="workspaces" ; eww update reveal-option="workspaces"
bind = , escape, submap, reset
submap=reset

# Screenshooter submap
submap=screenshooter
bind = , down, exec, eww update screenshot-option=3 ; eww update screenshot-reveal=3
bind = , up, exec, eww update screenshot-option=1 ; eww update screenshot-reveal=1
bind = , right, exec, declare -i val=`eww get screenshot-option` ; eww update screenshot-option=$(( val < 3 ? val + 1 : val )) ; eww update screenshot-reveal=$(( val < 3 ? val + 1 : val ))
bind = , left, exec, declare -i val=`eww get screenshot-option` ; eww update screenshot-option=$(( val > 1 ? val - 1 : val )) ; eww update screenshot-reveal=$(( val > 1 ? val - 1 : val ))
bind = , Return, exec, eww update screenshot-reveal=0
bind = , Return, exec, $HOME/.config/eww/scripts/screenshooter
bind = , Return, exec, eww update center-option="workspaces" ; eww update reveal-option="workspaces"
bind = , Return, submap, reset
bind = , escape, exec, eww update screenshot-option=1 ; eww update screenshot-reveal=0
bind = , escape, exec, eww update center-option="workspaces" ; eww update reveal-option="workspaces"
bind = , escape, submap, reset
submap=reset

# Submap for FULL keyboard capture in Virtualbox
submap=virtualbox
bind = SUPER, V, exec, notify-send -a hyprland "virtualbox submap disabled"
bind = SUPER, V, submap, reset
submap=reset
