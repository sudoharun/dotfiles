# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi -i -t foot

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output eDP-1 resolution 1920x1080 position 0,0
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard {
  xkb_layout gb
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+r exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $alt+1 move container to workspace number 1; workspace number 1
    bindsym $alt+2 move container to workspace number 2; workspace number 2
    bindsym $alt+3 move container to workspace number 3; workspace number 3
    bindsym $alt+4 move container to workspace number 4; workspace number 4
    bindsym $alt+5 move container to workspace number 5; workspace number 5
    bindsym $alt+6 move container to workspace number 6; workspace number 6
    bindsym $alt+7 move container to workspace number 7; workspace number 7
    bindsym $alt+8 move container to workspace number 8; workspace number 8
    bindsym $alt+9 move container to workspace number 9; workspace number 9
    bindsym $alt+0 move container to workspace number 10; workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $alt+f layout stacking
    bindsym $mod+d layout tabbed
    bindsym $mod+s layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Escape fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $alt+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $alt+r mode "resize"

mode "powermenu" {
    bindsym Left exec declare -i val=`eww get power-option` ; eww update power-option=$(( val > 1 ? val - 1 : val )) ; eww update power-reveal=$(( val > 1 ? val - 1 : val ))
    bindsym Right exec declare -i val=`eww get power-option` ; eww update power-option=$(( val < 5 ? val + 1 : val )) ; eww update power-reveal=$(( val < 5 ? val + 1 : val ))
    bindsym Up exec eww update power-option=1 ; eww update power-reveal=1
    bindsym Down exec eww update power-option=5 ; eww update power-reveal=5
    bindsym Return exec $HOME/.config/eww/scripts/powermenu; exec eww update center-option="workspaces" ; eww update reveal-option="workspaces"; mode "default"
    bindsym Escape exec eww update power-option=1; exec eww update power-reveal=0; exec eww update center-option="workspaces"; exec eww update reveal-option="workspaces"; mode "default"
}
bindsym XF86PowerOff exec eww update center-option="powermenu"; mode "powermenu"; exec eww update reveal-option="powermenu"; exec eww update power-reveal=1

mode "screenshooter" {
   bindsym Left exec declare -i val=`eww get screenshot-option` ; eww update screenshot-option=$(( val > 1 ? val - 1 : val )) ; eww update screenshot-reveal=$(( val > 1 ? val - 1 : val ))
   bindsym Right exec declare -i val=`eww get screenshot-option` ; eww update screenshot-option=$(( val < 3 ? val + 1 : val )) ; eww update screenshot-reveal=$(( val < 3 ? val + 1 : val ))
   bindsym Up exec eww update screenshot-option=1 ; eww update screenshot-reveal=1
   bindsym Down exec eww update screenshot-option=3 ; eww update screenshot-reveal=3
   bindsym Return exec eww update screenshot-reveal=0; exec $HOME/.config/eww/scripts/screenshooter; exec eww update center-option="workspaces" ; eww update reveal-option="workspaces"; mode "default"
   bindsym Escape exec eww update screenshot-option=1; exec eww update screenshot-reveal=0; exec eww update center-option="workspaces"; exec eww update reveal-option="workspaces"; mode "default"
}
bindsym Print exec eww update center-option="screenshooter"; mode "screenshooter"; exec eww update reveal-option="screenshooter"; exec eww update screenshot-reveal=1

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
# 
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done
# 
#     colors {
#         statusline #ffffff
#         background #121212
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*

# other binds
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioRaiseVolume exec pamixer -i 5
bindsym XF86AudioMute exec pamixer -t
bindsym XF86AudioMicMute exec pamixer --default-source -t
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym XF86MonBrightnessUp exec brillo -A 5 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness
bindsym XF86MonBrightnessDown exec brillo -U 5 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness
bindsym $mod+XF86MonBrightnessUp exec brillo -A 1 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness
bindsym $mod+XF86MonBrightnessDown exec brillo -U 1 ; echo 1 >> $HOME/.config/eww/files/brightness ; : > $HOME/.config/eww/files/brightness

bindsym $mod+f exec floorp
bindsym $mod+Shift+f exec floorp -private-window
bindsym $mod+e exec wofi-emoji -i -t foot

# Exec-once
exec eww update br=`brillo -G | awk -F'.' '{ print $1 }`
exec dbus-update-activation-environment --systemd --all
exec export DESKTOP_SESSION=sway
exec eww daemon && eww open bar
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec hypridle
